{"blocks":"[{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":1,\"y\":-9,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"GRASS_BLOCK\",\"blockData\":\"minecraft:grass_block[snowy\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":1,\"y\":-8,\"z\":-5,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"GRASS_BLOCK\",\"blockData\":\"minecraft:grass_block[snowy\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":1,\"y\":-8,\"z\":-4,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"GRASS_BLOCK\",\"blockData\":\"minecraft:grass_block[snowy\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":1,\"y\":-8,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"GRASS_BLOCK\",\"blockData\":\"minecraft:grass_block[snowy\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":1,\"y\":-8,\"z\":-2,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"GRASS_BLOCK\",\"blockData\":\"minecraft:grass_block[snowy\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":1,\"y\":-8,\"z\":-1,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":2,\"y\":-10,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":2,\"y\":-9,\"z\":-5,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":2,\"y\":-9,\"z\":-4,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":2,\"y\":-9,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":2,\"y\":-9,\"z\":-2,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":2,\"y\":-9,\"z\":-1,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"GRASS_BLOCK\",\"blockData\":\"minecraft:grass_block[snowy\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":2,\"y\":-8,\"z\":-6,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"GRASS_BLOCK\",\"blockData\":\"minecraft:grass_block[snowy\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":2,\"y\":-8,\"z\":-5,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"GRASS_BLOCK\",\"blockData\":\"minecraft:grass_block[snowy\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":2,\"y\":-8,\"z\":-4,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"GRASS_BLOCK\",\"blockData\":\"minecraft:grass_block[snowy\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":2,\"y\":-8,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"GRASS_BLOCK\",\"blockData\":\"minecraft:grass_block[snowy\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":2,\"y\":-8,\"z\":-2,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"GRASS_BLOCK\",\"blockData\":\"minecraft:grass_block[snowy\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":2,\"y\":-8,\"z\":-1,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"GRASS_BLOCK\",\"blockData\":\"minecraft:grass_block[snowy\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":2,\"y\":-8,\"z\":0,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d3,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":2,\"y\":-3,\"z\":-4,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d2,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":2,\"y\":-3,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d3,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":2,\"y\":-3,\"z\":-2,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d4,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":2,\"y\":-2,\"z\":-4,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d3,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":2,\"y\":-2,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d4,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":2,\"y\":-2,\"z\":-2,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d5,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":2,\"y\":-1,\"z\":-4,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d4,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":2,\"y\":-1,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d5,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":2,\"y\":-1,\"z\":-2,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":3,\"y\":-11,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":3,\"y\":-10,\"z\":-4,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":3,\"y\":-10,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":3,\"y\":-10,\"z\":-2,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":3,\"y\":-9,\"z\":-5,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":3,\"y\":-9,\"z\":-4,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":3,\"y\":-9,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":3,\"y\":-9,\"z\":-2,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":3,\"y\":-9,\"z\":-1,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"GRASS_BLOCK\",\"blockData\":\"minecraft:grass_block[snowy\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":3,\"y\":-8,\"z\":-6,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"GRASS_BLOCK\",\"blockData\":\"minecraft:grass_block[snowy\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":3,\"y\":-8,\"z\":-5,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"GRASS_BLOCK\",\"blockData\":\"minecraft:grass_block[snowy\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":3,\"y\":-8,\"z\":-4,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"GRASS_BLOCK\",\"blockData\":\"minecraft:grass_block[snowy\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":3,\"y\":-8,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"GRASS_BLOCK\",\"blockData\":\"minecraft:grass_block[snowy\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":3,\"y\":-8,\"z\":-2,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"GRASS_BLOCK\",\"blockData\":\"minecraft:grass_block[snowy\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":3,\"y\":-8,\"z\":-1,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"GRASS_BLOCK\",\"blockData\":\"minecraft:grass_block[snowy\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":3,\"y\":-8,\"z\":0,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d1,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":3,\"y\":-4,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d3,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":3,\"y\":-3,\"z\":-5,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d2,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":3,\"y\":-3,\"z\":-4,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d1,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":3,\"y\":-3,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d2,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":3,\"y\":-3,\"z\":-2,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d3,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":3,\"y\":-3,\"z\":-1,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d4,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":3,\"y\":-2,\"z\":-5,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d3,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":3,\"y\":-2,\"z\":-4,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d2,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":3,\"y\":-2,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d3,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":3,\"y\":-2,\"z\":-2,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d4,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":3,\"y\":-2,\"z\":-1,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d5,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":3,\"y\":-1,\"z\":-5,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d4,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":3,\"y\":-1,\"z\":-4,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d3,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":3,\"y\":-1,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d4,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":3,\"y\":-1,\"z\":-2,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d5,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":3,\"y\":-1,\"z\":-1,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d4,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":3,\"y\":0,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":-12,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":-11,\"z\":-4,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"SAND\",\"blockData\":\"minecraft:sand\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":-11,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":-11,\"z\":-2,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":-10,\"z\":-5,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":-10,\"z\":-4,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"SAND\",\"blockData\":\"minecraft:sand\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":-10,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":-10,\"z\":-2,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":-10,\"z\":-1,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":-9,\"z\":-6,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":-9,\"z\":-5,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":-9,\"z\":-4,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"SAND\",\"blockData\":\"minecraft:sand\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":-9,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":-9,\"z\":-2,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":-9,\"z\":-1,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":-9,\"z\":0,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"GRASS_BLOCK\",\"blockData\":\"minecraft:grass_block[snowy\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":-8,\"z\":-6,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"GRASS_BLOCK\",\"blockData\":\"minecraft:grass_block[snowy\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":-8,\"z\":-5,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"GRASS_BLOCK\",\"blockData\":\"minecraft:grass_block[snowy\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":-8,\"z\":-4,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":-8,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"GRASS_BLOCK\",\"blockData\":\"minecraft:grass_block[snowy\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":-8,\"z\":-2,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"GRASS_BLOCK\",\"blockData\":\"minecraft:grass_block[snowy\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":-8,\"z\":-1,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"GRASS_BLOCK\",\"blockData\":\"minecraft:grass_block[snowy\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":-8,\"z\":0,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"AIR\",\"blockData\":\"minecraft:air\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":-7,\"z\":-5,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"CHEST\",\"blockData\":\"minecraft:chest[facing\\u003dnorth,type\\u003dsingle,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"CHEST\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{\"0\":\"fom20000000000vvhm4o30crg7ci9c9464mb9apr6cuor0s0nuco30p9663o6dpn64mj9e9962ncea9h76apj09n72vj9bc5g60o32000ejo056cr00000\",\"1\":\"7sb10000000000fvor2c1g6do3m94m4i32b5klctj6fcdge0bv6c1gckj31236srj2b9kn4kj1bm754rje9pu5ivjm99h76apj09n72vj9bc5g60o3400006ftkbov00000\",\"2\":\"vhc40000000001vv3c9g60pn0ep4ioi8c9cmiljmcpthm1o1fspg61iicc7gcvjec9d6isiic5eoili9f9b760pj09n72vj9bc5g60o320005ei12d4s00000\",\"3\":\"3u5gg0000000007vsdh60o36s1r4ib291h5iqamepj7m6o705vj60o6a9hgu1iudph5kqbia9glr2imapt5mapj09n72vj9bc5g60o34000e8efjcsrg0000\",\"4\":\"7sb10000000000fvor2c1g6do3m94m4i32b5klctj6fcdge0bv6c1gckj31236srj2b9kn4kj1bm754ib2bhh7ikjee9omm2pj09n72vj9bc5g60o3400059r2f74v00000\",\"5\":\"fom20000000000vvhm4o30crg7ci9c9464mb9apr6cuor0s0nuco30p966246fpn64mj9e9962nc9a536iri6epi5iujid9kkmcpj09n72vj9bc5g60o340009utl3n5000000\",\"6\":\"vhc40000000001vv3c9g60pn0ep4ioi8c9cmiljmcpthm1o1fspg61iicc48cjjec9d6isiic5eoikbid9sm8kjqeph5mapj09n72vj9bc5g60o34000ctmhc2sug0000\",\"7\":\"1v2o80000000003vu6oj0c1je0ti95h4goipd5b7cpjr3c3g2vpj0c354oo8gpf6soiqd5p54oath5954r2ef5kmssa6apv7mapj09n72vj9bc5g60o340007mqo8f0vg0000\",\"8\":\"3u5gg0000000007vsdh60o36s1r4ib291h5iqamepj7m6o705vj60o6a9hgp1i6dph5kqbia9glr2ihap8nsv2uf5kmssa6apv7mapj09n72vj9bc5g60o340002ds8f3d0g0000\",\"9\":\"7sb10000000000fvor2c1g6do3m94m4i32b5klctj6fcdge0bv6c1gckj31234crj2b9kn4kj1bm554sj1e54mmcpj09n72vj9bc5g60o3400077g9eiksg0000\",\"10\":\"vhc40000000001vv3c9g60pn0ep4ioi8c9cmiljmcpthm1o1fspg61iicc7gcvjec9d6isiic5eokkaia9l662pj09n72vj9bc5g60o34000329sivos00000\",\"11\":\"vhc40000000001vv3c9g60pn0ep4ioi8c9cmiljmcpthm1o1fspg61iicc7gcvjec9d6isiic5eoiljq89km62pj09n72vj9bc5g60o340008co04ess00000\",\"12\":\"3u5gg0000000007vsdh60o36s1r4ib291h5iqamepj7m6o705vj60o6a9hgp1i6dph5kqbia9glr3ii99kmcii1dhb7khje99kmm2pj09n72vj9bc5g60o34000fpc825l0g0000\",\"13\":\"1v2o80000000003vgbge116030305q2nka41tn2096u3m0qnh4ol4g6d4k6nnuuugii4oes53lh4rao1pcdl2qs5un8p6thqcelk44a5pv755oldig931s3t5i078u01h83r7n92g0000\",\"14\":\"vhc40000000001vo5o4ogl01g1g2t1bq520etofcamdjn15agcc6d856if1vtv6s0ghsqf843nlkjao394dtbrc5udae9rrmo199jpr37c48jaq898en9u1c01ovtol5bsl1g0000\",\"15\":\"fom20000000000vvhm4o30crg7ci9c9464mb9apr6cuor0s0nuco30p966246fpn64mj9e9962ncea956ipia85m54vimf5skmcpj09n72vj9bc5g60o340001j543u5000000\"},\"version\":1,\"x\":4,\"y\":-7,\"z\":-4,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LOG\",\"blockData\":\"minecraft:oak_log[axis\\u003dy]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":-7,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LOG\",\"blockData\":\"minecraft:oak_log[axis\\u003dy]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":-6,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LOG\",\"blockData\":\"minecraft:oak_log[axis\\u003dy]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":-5,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d1,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":-4,\"z\":-4,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LOG\",\"blockData\":\"minecraft:oak_log[axis\\u003dy]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":-4,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d1,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":-4,\"z\":-2,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d2,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":-3,\"z\":-5,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d1,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":-3,\"z\":-4,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LOG\",\"blockData\":\"minecraft:oak_log[axis\\u003dy]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":-3,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d1,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":-3,\"z\":-2,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d2,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":-3,\"z\":-1,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d3,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":-2,\"z\":-5,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d2,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":-2,\"z\":-4,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d1,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":-2,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d2,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":-2,\"z\":-2,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d3,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":-2,\"z\":-1,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d4,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":-1,\"z\":-5,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d3,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":-1,\"z\":-4,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d2,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":-1,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d3,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":-1,\"z\":-2,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d4,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":-1,\"z\":-1,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d4,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":0,\"z\":-4,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d3,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":0,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d4,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":4,\"y\":0,\"z\":-2,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":5,\"y\":-11,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":5,\"y\":-10,\"z\":-4,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":5,\"y\":-10,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":5,\"y\":-10,\"z\":-2,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":5,\"y\":-9,\"z\":-5,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":5,\"y\":-9,\"z\":-4,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":5,\"y\":-9,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":5,\"y\":-9,\"z\":-2,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":5,\"y\":-9,\"z\":-1,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"GRASS_BLOCK\",\"blockData\":\"minecraft:grass_block[snowy\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":5,\"y\":-8,\"z\":-6,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"GRASS_BLOCK\",\"blockData\":\"minecraft:grass_block[snowy\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":5,\"y\":-8,\"z\":-5,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"GRASS_BLOCK\",\"blockData\":\"minecraft:grass_block[snowy\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":5,\"y\":-8,\"z\":-4,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"GRASS_BLOCK\",\"blockData\":\"minecraft:grass_block[snowy\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":5,\"y\":-8,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"GRASS_BLOCK\",\"blockData\":\"minecraft:grass_block[snowy\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":5,\"y\":-8,\"z\":-2,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"GRASS_BLOCK\",\"blockData\":\"minecraft:grass_block[snowy\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":5,\"y\":-8,\"z\":-1,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"GRASS_BLOCK\",\"blockData\":\"minecraft:grass_block[snowy\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":5,\"y\":-8,\"z\":0,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d1,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":5,\"y\":-4,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d3,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":5,\"y\":-3,\"z\":-5,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d2,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":5,\"y\":-3,\"z\":-4,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d1,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":5,\"y\":-3,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d2,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":5,\"y\":-3,\"z\":-2,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d3,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":5,\"y\":-3,\"z\":-1,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d4,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":5,\"y\":-2,\"z\":-5,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d3,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":5,\"y\":-2,\"z\":-4,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d2,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":5,\"y\":-2,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d3,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":5,\"y\":-2,\"z\":-2,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d4,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":5,\"y\":-2,\"z\":-1,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d5,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":5,\"y\":-1,\"z\":-5,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d4,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":5,\"y\":-1,\"z\":-4,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d3,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":5,\"y\":-1,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d4,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":5,\"y\":-1,\"z\":-2,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d5,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":5,\"y\":-1,\"z\":-1,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d4,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":5,\"y\":0,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":6,\"y\":-10,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":6,\"y\":-9,\"z\":-5,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":6,\"y\":-9,\"z\":-4,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":6,\"y\":-9,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":6,\"y\":-9,\"z\":-2,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":6,\"y\":-9,\"z\":-1,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"GRASS_BLOCK\",\"blockData\":\"minecraft:grass_block[snowy\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":6,\"y\":-8,\"z\":-6,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"GRASS_BLOCK\",\"blockData\":\"minecraft:grass_block[snowy\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":6,\"y\":-8,\"z\":-5,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"GRASS_BLOCK\",\"blockData\":\"minecraft:grass_block[snowy\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":6,\"y\":-8,\"z\":-4,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"GRASS_BLOCK\",\"blockData\":\"minecraft:grass_block[snowy\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":6,\"y\":-8,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"GRASS_BLOCK\",\"blockData\":\"minecraft:grass_block[snowy\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":6,\"y\":-8,\"z\":-2,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"GRASS_BLOCK\",\"blockData\":\"minecraft:grass_block[snowy\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":6,\"y\":-8,\"z\":-1,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"GRASS_BLOCK\",\"blockData\":\"minecraft:grass_block[snowy\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":6,\"y\":-8,\"z\":0,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d3,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":6,\"y\":-3,\"z\":-4,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d2,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":6,\"y\":-3,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d3,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":6,\"y\":-3,\"z\":-2,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d4,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":6,\"y\":-2,\"z\":-4,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d3,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":6,\"y\":-2,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d4,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":6,\"y\":-2,\"z\":-2,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d5,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":6,\"y\":-1,\"z\":-4,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d4,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":6,\"y\":-1,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"OAK_LEAVES\",\"blockData\":\"minecraft:oak_leaves[distance\\u003d5,persistent\\u003dfalse,waterlogged\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":6,\"y\":-1,\"z\":-2,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"DIRT\",\"blockData\":\"minecraft:dirt\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":7,\"y\":-9,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"GRASS_BLOCK\",\"blockData\":\"minecraft:grass_block[snowy\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":7,\"y\":-8,\"z\":-5,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"GRASS_BLOCK\",\"blockData\":\"minecraft:grass_block[snowy\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":7,\"y\":-8,\"z\":-4,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"GRASS_BLOCK\",\"blockData\":\"minecraft:grass_block[snowy\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":7,\"y\":-8,\"z\":-3,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"GRASS_BLOCK\",\"blockData\":\"minecraft:grass_block[snowy\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":7,\"y\":-8,\"z\":-2,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true},{\"material\":\"GRASS_BLOCK\",\"blockData\":\"minecraft:grass_block[snowy\\u003dfalse]\",\"biome\":\"PLAINS\",\"stateType\":\"NORMAL\",\"dataType\":\"NORMAL\",\"baseColor\":\"Color:[argb0xFFFFFFFF]\",\"potionEffect\":\"CraftPotionEffectType[minecraft:speed]\",\"command\":\"\",\"commandBlockName\":\"\",\"entity\":\"COW\",\"exitLocation\":\"\",\"flower\":\"RED_DYE:0\",\"playing\":\"MUSIC_DISC_CHIRP\",\"signLines\":[],\"rotateFace\":\"NORTH\",\"skullOwner\":\"Notch\",\"skullType\":\"PLAYER\",\"charges\":0,\"inventory\":{},\"version\":1,\"x\":7,\"y\":-8,\"z\":-1,\"brewingTime\":0,\"fuelLevel\":0,\"delay\":0,\"data\":0,\"burnTime\":0,\"cookTime\":0,\"patterns\":[],\"exactTeleport\":true}]","entities":"[]","originLocation":"4:-7:-5:island_normal_world:-0.0793387:2.2499797","time":1725605999004,"version":1}